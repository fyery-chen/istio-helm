categories:
- Microservice 
- Service mesh 
questions:
- variable: global.proxy.image 
  default: "istio/proxy"
  description: "The image of istio proxy"
  type: string 
  required: true
  label: Image Repository of Istio Proxy 
  group: "Global Settings"
- variable: global.proxy.initImage 
  default: "istio/proxy_init"
  description: "The initial image of istio proxy"
  type: string 
  required: true
  label: Initial Image Repository of Istio Proxy 
  group: "Global Settings"
- variable: global.tag
  default: "0.7.1"
  description: "The image tag of istio proxy"
  type: string 
  required: true
  label: Image tag of Istio Proxy 
  group: "Global Settings"
- variable: mixer.enabled 
  default: "true"
  description: "Enabled the mixer component of istio"
  type: boolean 
  required: true
  label: Enabled the Mixer Component 
  show_subquestion_if: true
  group: "Mixer Component Settings"
  subquestions:
  - variable: mixer.replicaCount 
    default: "1"
    description: "The number of mixer component"
    type: int
    label: Mixer Replica Count
  - variable: mixer.image.repository 
    default: "istio/mixer"
    description: "The mixer component image repository"
    type: string 
    label: Mixer Image Repository 
  - variable: mixer.image.tag
    default: "0.7.1"
    description: "The mixer image tag"
    type: string 
    label: Mixer Image Tag 
  - variable: mixer.prometheusStatsdExporter.repository 
    default: "prom/statsd-exporter"
    description: "The prometheus stas exporter image repository"
    type: string 
    label: Prometheus Exporter Image Repository 
  - variable: mixer.prometheusStatsdExporter.tag
    default: "latest"
    description: "The prometheus stas exporter image tag"
    type: string 
    label: Prometheus Exporter Image Tag 
- variable: pilot.enabled 
  default: "true"
  description: "Enabled the pilot component of istio"
  type: boolean 
  required: true
  label: Enabled the Pilot Component 
  show_subquestion_if: true
  group: "Pilot Component Settings"
  subquestions:
  - variable: pilot.replicaCount 
    default: "1"
    description: "The number of pilot component"
    type: int
    label: Pilot Replica Count
  - variable: pilot.image.repository 
    default: "istio/pilot"
    description: "The pilot component image repository"
    type: string 
    label: Pilot Image Repository 
  - variable: pilot.image.tag
    default: "0.7.1"
    description: "The pilot image tag"
    type: string 
    label: Pilot Image Tag 
- variable: grafana.enabled 
  default: "false"
  description: "Enabled the grafana component of istio"
  type: boolean 
  required: true
  label: Enabled the Grafana Component 
  show_subquestion_if: true
  group: "Grafana Component Settings"
  subquestions:
  - variable: grafana.replicaCount 
    default: "1"
    description: "The number of grafana component"
    type: int
    label: Grafana Replica Count
  - variable: grafana.image.repository 
    default: "istio/grafana"
    description: "The grafana component image repository"
    type: string 
    label: Grafana Image Repository 
  - variable: grafana.image.tag
    default: "0.7.1"
    description: "The grafana image tag"
    type: string 
    label: Grafana Image Tag 
  - variable: grafana.ingress.enabled
    default: "false"
    description: "Expose grafana using Layer 7 Load Balancer - ingress"
    type: boolean 
    label: Expose grafana using Layer 7 Load Balancer 
  - variable: grafana.ingress.hosts[0]
    default: "grafana.local"
    description: "The hostname to access the grafana, it is a json array type"
    type: hostname
    label: Hostname to Access Grafana 
  - variable: grafana.service.type
    default: "NodePort"
    description: "Grafana service type"
    type: enum 
    label: Grafana Service Type 
    options:
        - "ClusterIP"
        - "NodePort"
- variable: servicegraph.enabled 
  default: "false"
  description: "Enabled the servicegraph component of istio"
  type: boolean 
  required: true
  label: Enabled the Servicegraph Component 
  show_subquestion_if: true
  group: "Servicegraph Component Settings"
  subquestions:
  - variable: servicegraph.replicaCount 
    default: "1"
    description: "The number of servicegraph component"
    type: int
    label: Servicegraph Replica Count
  - variable: servicegraph.image.repository 
    default: "istio/servicegraph"
    description: "The servicegraph component image repository"
    type: string 
    label: Servicegraph Image Repository 
  - variable: servicegraph.image.tag
    default: "0.7.1"
    description: "The servicegraph image tag"
    type: string 
    label: Servicegraph Image Tag 
  - variable: servicegraph.ingress.enabled
    default: "false"
    description: "Expose servicegraph using Layer 7 Load Balancer - ingress"
    type: boolean 
    label: Expose servicegraph using Layer 7 Load Balancer 
  - variable: servicegraph.ingress.hosts[0]
    default: "servicegraph.local"
    description: "The hostname to access servicegraph, it is a json array"
    type: string 
    label: Hostname to Access Servicegraph 
  - variable: servicegraph.service.type
    default: "NodePort"
    description: "Servicegraph service type"
    type: enum 
    label: Servicegraph Service Type 
    options:
        - "ClusterIP"
        - "NodePort"
- variable: zipkin.enabled 
  default: "false"
  description: "Enabled the zipkin component of istio"
  type: boolean 
  required: true
  label: Enabled the zipkin Component 
  show_subquestion_if: true
  group: "Zipkin Component Settings"
  subquestions:
  - variable: zipkin.replicaCount 
    default: "1"
    description: "The number of zipkin component"
    type: int
    label: Zipkin Replica Count
  - variable: zipkin.image.repository 
    default: "openzipkin/zipkin"
    description: "The zipkin component image repository"
    type: string 
    label: Zipkin Image Repository 
  - variable: zipkin.image.tag
    default: "latest"
    description: "The zipkin image tag"
    type: string 
    label: Zipkin Image Tag 
  - variable: zipkin.ingress.enabled
    default: "false"
    description: "Expose zipkin using Layer 7 Load Balancer - ingress"
    type: boolean 
    label: Expose zipkin using Layer 7 Load Balancer 
  - variable: zipkin.ingress.hosts[0]
    default: "zipkin.local"
    description: "The hostname to access zipkin, it is a json array type"
    type: string 
    label: Hostname to Access Zipkin 
  - variable: zipkin.service.type
    default: "NodePort"
    description: "Zipkin service type"
    type: enum 
    label: Zipkin Service Type 
    options:
        - "ClusterIP"
        - "NodePort"
- variable: prometheus.enabled 
  default: "false"
  description: "Enabled the prometheus component of istio"
  type: boolean 
  required: true
  label: Enabled the prometheus Component 
  show_subquestion_if: true
  group: "Prometheus Component Settings"
  subquestions:
  - variable: prometheus.replicaCount 
    default: "1"
    description: "The number of prometheus component"
    type: int
    label: Prometheus Replica Count
  - variable: prometheus.image.repository 
    default: "prom/prometheus"
    description: "The prometheuscomponent image repository"
    type: string 
    label: Prometheus Image Repository 
  - variable: prometheus.image.tag
    default: "latest"
    description: "The prometheus image tag"
    type: string 
    label: Prometheus Image Tag 
  - variable: prometheus.ingress.enabled
    default: "false"
    description: "Expose prometheus using Layer 7 Load Balancer - ingress"
    type: boolean 
    label: Expose prometheus using Layer 7 Load Balancer 
  - variable: prometheus.ingress.hosts[0]
    default: "prometheus.local"
    description: "The hostname to access prometheus server"
    type: string 
    label: Hostname to Access Prometheus Server 
  - variable: prometheus.service.nodePort.enabled
    default: "true"
    description: "Enabled NodePort service type"
    type: boolean 
    label: Prometheus NodePort Service Type 
  - variable: prometheus.service.nodePort.port
    default: "32090"
    description: "NodePort http(to set explicitly, choose port between 30000-32767)"
    type: int 
    label: Prometheus NodePort Http Port 
- variable: security.replicaCount 
  default: "1"
  description: "The number of security component"
  type: int 
  required: true
  label: Security Replica Count 
  group: "Security Component Settings"
- variable: security.image.repository 
  default: "istio/istio-ca"
  description: "The security image repository"
  type: string 
  label: Security Image Repository 
  group: "Security Component Settings"
- variable: security.image.tag
  default: "0.7.1"
  description: "The security image tag"
  type: string 
  label: Security Image Tag 
  group: "Security Component Settings"
- variable: ingress.enabled
  default: "true"
  description: "Expose istio using Layer 7 Load Balancer - ingress"
  type: boolean
  label: Expose istio using Layer 7 Load Balancer
  show_subquestion_if: true
  group: "Istio Ingress Settings"
  subquestions:
  - variable: ingress.autoscaleMin
    default: 2 
    description: "The autoscale minimum number of istio ingress"
    type: int 
    label: Istio Ingress Minimum autoscale number 
    min: 2
    max: 8
  - variable: ingress.autoscaleMax
    default: 8 
    description: "The autoscale maximum number of istio ingress"
    type: int 
    label: Istio Ingress Maximum autoscale number 
    min: 2
    max: 8
  - variable: ingress.service.nodePort.enabled
    default: "false"
    description: "Enabled nodePort service type"
    type: boolean
    label: Enabled NodePort Service Type 
  - variable: ingress.service.nodePort.port
    default: "32000"
    description: "NodePort http(to set explicitly, choose port between 30000-32767)"
    type: int 
    label: Ingress NodePort Http Port 

